<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd">
<!-- url패턴을 사용해서 스프링 시큐리티 필터를 무시하는 경로 추가하기(아래) -->
<security:http pattern="/**/*.js" security="none"></security:http>
<security:http pattern="/**/*.css" security="none"></security:http>
<security:http pattern="/**/img/*" security="none"></security:http>
<!-- 스프링 시큐리티 기본설정인 로그인페이지, 로그아웃 기능 사용하겠다고 명시 spEL언어를 사용 가능-->
<security:http auto-config="true" use-expressions="true">
	<security:session-management invalid-session-url="/">
	<!-- 동일 ID의 세션 최대 개수가 3개, 그 이상일 경우 기존 세션 무효화 (아래)-->
	<security:concurrency-control max-sessions="3" error-if-maximum-exceeded="false" />
	</security:session-management>
	<!-- 특정 url 패턴에 해당하는 권한 부여(아래) -->
	<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
	<security:intercept-url pattern="/**/*_write" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" method="GET"/>
	<security:intercept-url pattern="/**/*_update" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
	<security:intercept-url pattern="/**/*_delete" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
	<security:intercept-url pattern="/**" access="permitAll"/>
	<security:csrf disabled="true"/>
	<security:form-login
		login-page="login"
		login-processing-url="/login"
		always-use-default-target="true"
		default-target-url="/login_success"
		authentication-failure-url="/login?msg=fail"
		username-parameter="user_id"
		password-parameter="user_pw"
	/>
	<security:remember-me key="remember-key" token-validity-seconds="604800" remember-me-parameter="rember-me-parameter"/>
	<security:logout logout-url="/logout" logout-success-url="/" invalidate-session="true" 
	delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"/>
</security:http>
	<!-- 
	쿠키에는 간단한 텍스트문자 정보가 저장되어 있다.(접속한 PC기기에 저장된다.)
	반대로 세션은 간단한 텍스트문자 정보가 저장되어 있다.(접속한 서버기기에 저장된다.) 
	 -->
	<!-- 로그아웃 성공시 홈으로 이동, 세션을 지운다.(true) -->
	<!-- remember-me : 아이디 저장 기능 , 604800 : 일주일 -->
	<!-- 인증이 실패했을 경우, 로그인 페이지로 이동. 쿼리스트링에 msg=fail 값 넣어서 이동. -->
	<!-- 홈컨트롤러에 로그인이 성공했으면, login-success(세션을 만든다)를 실행하도록 만들 예정 
	세션에 저장할 정보는 로그인한 사람의 이름, 로그인한 사람의 권한. 
		- 특징 : 세션에 저장된 정ㅇ보는 페이지이동해도 세션정보가 사라지지 않는다.
	-->
	<!-- /home/login이렇게 경로를 사용하지 않고, /login으로 하는 이유? 공동기능은 경로제약사항을 두지 않기 위해서.(ex. home버전 업그레이드 home2021 -> home2022) -->
	<!-- HomeController클래스 Home22Controller클래스를 만들어서 사이트리뉴얼 한다. 다른 공동기능은 건드리지 않아도 됨.-->
	<!-- csrf 크로스사이트 리퀘으스 포거리 : 교차사이트 요청 공격 : 기본은 csrf기능사용(disabled="false"). 기본일 때는 jsp에서 폼전송태그를 jstl대그로 변경해야한다.그래서 disabled="true"한다. -->

	<!-- 인증관련 아이디/암호 비교설정(아래) -->
	<security:authentication-manager>
	<!-- 스프링에 내장되어 있는 인증제공자, userDetail과 userDetailService를 사용하겠다고 명시(아래) -->
		<security:authentication-provider>
			<security:jdbc-user-service 
				data-source-ref="dataSource"
				users-by-username-query="select user_id as no, user_pw as password, enabled from tbl_member where user_id = ?"	
			/>		
		</security:authentication-provider>
	</security:authentication-manager>
</beans>