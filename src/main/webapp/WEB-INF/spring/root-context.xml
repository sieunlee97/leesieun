<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">
	

	
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 로컬 mysql log4jdbc 설정전 -->
	<!-- 실제로 돈받고 서비스할 때는 이 설정으로. -->
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/edu"></property>
		<property name="username" value="root"></property>
		<property name="password" value="apmsetup"></property>
	</bean> -->
	
	<!-- 로컬 mysql log4jdbc 설정 후 -->
	<!-- 개발할 때는 이 설정으로. -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="url" value="jdbc:log4jdbc:mysql://127.0.0.1:3306/edu"></property>
		<property name="username" value="root"></property>
		<property name="password" value="apmsetup"></property>
	</bean>
	
	
	<!--
		DataSource 설정으로 JDBC 연결후, MyBatis와 MySql을 연동시킴. 
		SqlSessionFactory : myBatis와 스프링의 Connection 생성 후 쿼리 위치 지정.
	 -->		 		
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">	   
	 	<property name="dataSource" ref="dataSource" />
	 	<!-- 매퍼 xml로만든 쿼리파일의 경로를 인식하게 함.(아래), classpath경로 : src/main/resources/쿼리xml -->
	 	 <property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property>
	</bean>
	
	<!-- 
		MyBatis에서 DAO를 이용하는 경우, SqlSessionTemplate라는 것을 이용해서 DAO를 구현함.
		DAO라는 것은 DataAccessObject 데이터핸들링(insert(),delete()등을 처리하는 클래스 DAO라고 합니다.
		개발자들이 직접 DB 연결, 종료작업하는 것을 줄여줌.
	 	sqlSessionTemplate을 호출할 때 SqlSessionFactory를 생성자로 주입함.
	 -->
	 <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
	  <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	 </bean>
	
	<context:component-scan base-package="org.edu.dao" />
	<context:component-scan base-package="org.edu.service"/>
	<context:component-scan base-package="org.edu.vo"/>
	<context:component-scan base-package="org.edu.aop"/>
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<aop:config></aop:config>

	<!-- 대표적으로 게시판 입력(상세보기에도 추가) 트랜잭션에서 이용 -->
	 <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	 </bean>
	
</beans>
